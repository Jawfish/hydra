name: Bun Update

on:
  schedule:
    - cron: "0 11 * * *"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-bun:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"

      - name: Check for outdated dependencies
        id: check_outdated
        run: |
          bun outdated > outdated.txt
          if [[ $(wc -l < outdated.txt) -eq 1 ]]; then
            echo "::notice::No outdated dependencies found"
            echo "has_updates=false" >> $GITHUB_OUTPUT
          else
            echo "has_updates=true" >> $GITHUB_OUTPUT
          fi

      - name: Update dependencies
        if: steps.check_outdated.outputs.has_updates == 'true'
        # --latest will overwrite tailwindcss@next, so do it separately
        run: bun update --latest && bun install tailwindcss@next @tailwindcss/vite@next

      - name: Confirm we can still build
        run: bun install && bun run build


      - name: Set branch name
        id: set-branch
        run: echo "BRANCH_NAME=deps/bun-update-$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create PR branch and push changes
        if: steps.check_outdated.outputs.has_updates == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -b ${{ env.BRANCH_NAME }}

          if [[ -n "$(git status --porcelain)" ]]; then
            git add package.json bun.lockb
            git commit -m "Automated dependency update by GitHub Actions"
            git push origin ${{ env.BRANCH_NAME }}
          else
            echo "No changes to commit"
            exit 0
          fi

      - name: Create Pull Request
        if: steps.check_outdated.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        id: cpr
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Automated dependency update by GitHub Actions
          title: 'chore(deps): update dependencies'
          body: Automated dependency update by GitHub Actions
          branch: ${{ env.BRANCH_NAME }}
          base: main
          delete-branch: true
